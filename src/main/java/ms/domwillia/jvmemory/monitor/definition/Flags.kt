package ms.domwillia.jvmemory.monitor.definition

import org.objectweb.asm.Opcodes

interface Flags

enum class Visibility {
    PACKAGE, PUBLIC, PROTECTED, PRIVATE
}

enum class ClassType {
    CLASS, ENUM, INTERFACE, ABSTRACT
}

enum class FlagType {
    CLASS, METHOD, FIELD
}

data class ClassFlags(
        val visibility: Visibility,
        val type: ClassType
) : Flags

// TODO varargs?
data class MethodFlags(
        val visibility: Visibility,
        val isFinal: Boolean,
        val isStatic: Boolean,
        val isAbstract: Boolean
) : Flags

data class FieldFlags(
        val visibility: Visibility,
        val isStatic: Boolean,
        val isFinal: Boolean
) : Flags

fun parseFlags(access: Int, flagType: FlagType): Flags {
    val vis = when {
        access.and(Opcodes.ACC_PUBLIC) != 0 -> Visibility.PUBLIC
        access.and(Opcodes.ACC_PROTECTED) != 0 -> Visibility.PROTECTED
        access.and(Opcodes.ACC_PRIVATE) != 0 -> Visibility.PRIVATE
        else -> Visibility.PACKAGE
    }

    return when (flagType) {
        FlagType.CLASS -> {
            val classType = when {
                access.and(Opcodes.ACC_ENUM) != 0 -> ClassType.ENUM
                access.and(Opcodes.ACC_INTERFACE) != 0 -> ClassType.INTERFACE
                access.and(Opcodes.ACC_ABSTRACT) != 0 -> ClassType.ABSTRACT
                else -> ClassType.CLASS
            }
            ClassFlags(vis, classType)
        }
        FlagType.METHOD -> {
            MethodFlags(
                    vis,
                    access.and(Opcodes.ACC_FINAL) != 0,
                    access.and(Opcodes.ACC_STATIC) != 0,
                    access.and(Opcodes.ACC_ABSTRACT) != 0
            )
        }
        FlagType.FIELD -> {
            FieldFlags(
                    vis,
                    access.and(Opcodes.ACC_STATIC) != 0,
                    access.and(Opcodes.ACC_FINAL) != 0

            )
        }
    }

}

/*
    // classes
    Flag Name 	Value 	Interpretation
    ACC_PUBLIC 	0x0001 	Declared public; may be accessed from outside its package.
    ACC_FINAL 	0x0010 	Declared final; no subclasses allowed.
    ACC_SUPER 	0x0020 	Treat superclass methods specially when invoked by the invokespecial instruction.
    ACC_INTERFACE 	0x0200 	Is an interface, not a class.
    ACC_ABSTRACT 	0x0400 	Declared abstract; must not be instantiated.
    ACC_SYNTHETIC 	0x1000 	Declared synthetic; not present in the source code.
    ACC_ANNOTATION 	0x2000 	Declared as an annotation type.
    ACC_ENUM 	0x4000 	Declared as an enum type.

    // TODO inner classes?
    Flag Name 	Value 	Interpretation
    ACC_PUBLIC 	0x0001 	Marked or implicitly public in source.
    ACC_PRIVATE 	0x0002 	Marked private in source.
    ACC_PROTECTED 	0x0004 	Marked protected in source.
    ACC_STATIC 	0x0008 	Marked or implicitly static in source.
    ACC_FINAL 	0x0010 	Marked final in source.
    ACC_INTERFACE 	0x0200 	Was an interface in source.
    ACC_ABSTRACT 	0x0400 	Marked or implicitly abstract in source.
    ACC_SYNTHETIC 	0x1000 	Declared synthetic; not present in the source code.
    ACC_ANNOTATION 	0x2000 	Declared as an annotation type.
    ACC_ENUM 	0x4000 	Declared as an enum type.

    // methods
    ACC_PUBLIC 	0x0001 	Declared public; may be accessed from outside its package.
    ACC_PRIVATE 	0x0002 	Declared private; accessible only within the defining class.
    ACC_PROTECTED 	0x0004 	Declared protected; may be accessed within subclasses.
    ACC_STATIC 	0x0008 	Declared static.
    ACC_FINAL 	0x0010 	Declared final; must not be overridden (ยง5.4.5).
    ACC_SYNCHRONIZED 	0x0020 	Declared synchronized; invocation is wrapped by a monitor use.
    ACC_BRIDGE 	0x0040 	A bridge method, generated by the compiler.
    ACC_VARARGS 	0x0080 	Declared with variable number of arguments.
    ACC_NATIVE 	0x0100 	Declared native; implemented in a language other than Java.
    ACC_ABSTRACT 	0x0400 	Declared abstract; no implementation is provided.
    ACC_STRICT 	0x0800 	Declared strictfp; floating-point mode is FP-strict.
    ACC_SYNTHETIC 	0x1000 	Declared synthetic; not present in the source code.

    // fields
    ACC_PUBLIC 	0x0001 	Declared public; may be accessed from outside its package.
    ACC_PRIVATE 	0x0002 	Declared private; usable only within the defining class.
    ACC_PROTECTED 	0x0004 	Declared protected; may be accessed within subclasses.
    ACC_STATIC 	0x0008 	Declared static.
    ACC_FINAL 	0x0010 	Declared final; never directly assigned to after object construction (JLS ยง17.5).
    ACC_VOLATILE 	0x0040 	Declared volatile; cannot be cached.
    ACC_TRANSIENT 	0x0080 	Declared transient; not written or read by a persistent object manager.
    ACC_SYNTHETIC 	0x1000 	Declared synthetic; not present in the source code.
    ACC_ENUM 	0x4000 	Declared as an element of an enum.
*/
