buildscript {
    ext {
        kotlin_version = '1.2.10'
        protobufGradlePlugin = "0.8.3"
        protobufVersion = "3.2.0"
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobufGradlePlugin"
    }
}

group 'ms.domwillia.jvmemory'
version '0.1'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // https://mvnrepository.com/artifact/org.ow2.asm/asm
    compile group: 'org.ow2.asm', name: 'asm', version: '6.0'

    // https://mvnrepository.com/artifact/org.ow2.asm/asm-commons
    compile group: 'org.ow2.asm', name: 'asm-commons', version: '6.0'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: "$protobufVersion"
}

sourceSets.main {
    proto {
        srcDir "../protobufs/monitor"
    }

    java {
        srcDirs += ["${protobuf.generatedFilesBaseDir}/main/java"]
    }

    kotlin {
        srcDirs += ["src/main/kotlin"]
    }
}

protobuf.protoc {
    artifact = "com.google.protobuf:protoc:$protobufVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    dependsOn("generateProto")
    dependsOn("buildNative")
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

clean {
    dependsOn("cleanNative")
}

task buildNative(type: Exec) {
    workingDir "../jvmti-agent"
    commandLine "make", "libagent.so"
}

task cleanNative(type: Exec) {
    workingDir "../jvmti-agent"
    commandLine "make", "clean"
}

task buildJar(type: Jar) {
    manifest {
        from("src/main/resources/META-INF/MANIFEST.MF")
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
